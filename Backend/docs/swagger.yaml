basePath: /api/v1
definitions:
  main.ErrorResponse:
    properties:
      errors:
        items:
          type: string
        type: array
      message:
        example: Validation failed
        type: string
      statusCode:
        example: 422
        type: integer
    type: object
  main.PaymentDetails:
    properties:
      amount:
        example: 500
        type: number
      cardNumber:
        example: '************1111'
        type: string
      currencyCode:
        example: GBP
        type: string
      expiryDate:
        example: 12/29
        type: string
      firstName:
        example: John
        type: string
      id:
        example: PAY-1625843728243722000
        type: string
      lastName:
        example: Doe
        type: string
      status:
        example: payment_paid
        type: string
      statusCode:
        example: 10000
        type: integer
    type: object
  main.ProcessPaymentRequest:
    properties:
      amount:
        example: 500
        type: number
      cardNumber:
        example: "4111111111111111"
        type: string
      currencyCode:
        example: GBP
        type: string
      cvv:
        example: "123"
        type: string
      expiryDate:
        description: Custom validation to ensure it matches "MM/YY" format
        example: 12/29
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
    required:
    - amount
    - cardNumber
    - currencyCode
    - cvv
    - expiryDate
    - firstName
    - lastName
    type: object
  main.ProcessPaymentResponse:
    properties:
      id:
        example: PAY-1625843728243722000
        type: string
      responseSummary:
        example: Approved
        type: string
      status:
        example: payment_paid
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: Lionel_Wilson@outlook.com
    name: Lionel Wilson
    url: https://github.com/Lionel-Wilson
  description: An API for processing and retrieving payments made by Lionel Wilson
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Checkout.com Payment Gateway API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Check the health of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - Health
  /payments:
    get:
      consumes:
      - application/json
      description: Retrieves the details of all previously made payments.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.PaymentDetails'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Retrieve all payments
      tags:
      - Payments
    post:
      consumes:
      - application/json
      description: Processes a payment through the payment gateway.
      parameters:
      - description: A JSON body
        in: body
        name: ProccessPaymentRequestBody
        required: true
        schema:
          $ref: '#/definitions/main.ProcessPaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.ProcessPaymentResponse'
        "402":
          description: Payment Required
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Process a Payment
      tags:
      - Payments
  /payments/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves the details of a previously made payment using its identifier.
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.PaymentDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Retrieve Payment Details
      tags:
      - Payments
swagger: "2.0"
